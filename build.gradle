plugins {
    id 'java'
    id 'application'
    id 'maven'
    id 'maven-publish'
}

group 'com.mulinlab'
version '1.1.0-SNAPSHOT'

// jdk版本
sourceCompatibility = 1.8
targetCompatibility = 1.8
// java编译的时候缺省状态下会因为中文字符而失败
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

repositories {
    mavenLocal()
    mavenCentral()
}
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            afterEvaluate {
                artifactId = jar.baseName
            }
        }
    }
}

dependencies {
    compile('com.intel.gkl:gkl:0.8.6') {
        exclude module: 'htsjdk'
    }

    compile 'com.github.samtools:htsjdk:2.20.3'
    compile 'net.sf.jopt-simple:jopt-simple:5.0.3'
    compile 'org.apache.commons:commons-lang3:3.4'
    compileOnly 'org.apache.logging.log4j:log4j-api:2.3'
    compileOnly 'org.apache.logging.log4j:log4j-core:2.3'
//    compile 'org.apache.logging.log4j:log4j-api:2.3'
//    compile 'org.apache.logging.log4j:log4j-core:2.3'
    compile group: 'commons-io', name: 'commons-io', version: '2.6'
    compile group: 'org.broadinstitute', name: 'barclay', version: '2.1.0'
    compile group: 'de.charite.compbio', name: 'jannovar-core', version: '0.34'
    compile group: 'de.charite.compbio', name: 'jannovar-stats', version: '0.33'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.10.0'
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

application {
    mainClassName = 'org.mulinlab.varnote.cmdline.VarNoteCommandLine'
}

configurations.all {
    exclude group: "org.slf4j", module: "slf4j-log4j12"
    exclude group: "log4j", module: "log4j"
}

jar {
    manifest {
        attributes("Implementation-Title": "VarNote",
                "Implementation-Version": version,
                'Main-Class': 'org.mulinlab.varnote.cmdline.VarNoteCommandLine')
    }

    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
    exclude 'log4j.properties'
    exclude '**/*.SF'
    exclude '**/*.RSA'
//    exclude 'log4j2.xml'
}


tasks.withType(Javadoc) {
    options.addStringOption('Xdoclint:none')
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

javadoc {
    options.addStringOption('Xdoclint:none', '-quiet')
    source = sourceSets.main.allJava
    include '**/*.java'
}

artifacts {
    archives jar
}

